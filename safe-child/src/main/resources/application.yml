server:
  port: 8081

spring:
  rabbitmq:
    host: ${QUEUE_HOST:localhost}
    port: ${QUEUE_PORT:5672}
    username: ${QUEUE_USERNAME:guest}
    password: ${QUEUE_PASSWORD:guest}
  datasource:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB:safe_child_db}
    username: ${DB_USERNAME:aaron}
    password: ${DB_PASSWORD:aaron}
  jpa:
    show-sql: true
    hibernate:
      dll-auto: none
      show: true
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        format_sql: true
  flyway:
    url: jdbc:postgresql://${DB_HOST:localhost}:${DB_PORT:5432}/${DB:safe_child_db}
    user: ${DB_USERNAME:aaron}
    password: ${DB_PASSWORD:aaron}
    schemas: core
    locations: classpath:db/migration

url:
  core-banking-url: http://host.docker.internal:8080/platform

accounts:
  sms: SCH2023

transfer-type:
  sms-notification: 29

notification:
  routing:
    key:
      sms: sms.routing
  queue:
    name:
      sms: sms.queue
  exchange:
    name: notification.exchange
  sms:
    drop-off: Hi Parent! Your Child With ID %s has been Dropped off from %s by a %s with ID %s at %s
    pick-up: Hi Parent! Your Child With ID %s has been picked up from home by a %s with ID %s at %s
    on-school: Hi Parent! Your Child With ID %s has been received at %s by a %s with ID %s at %s
    off-school: Hi Parent! Your Child With ID %s has been signed out by a %s with ID %s from %s at %s

    #drop-off: Hi Parent! Your Child With ID %s has been Dropped off from school with ID %s by a %s with ID %s at %s
    #pick-up: Hi Parent! Your Child With ID %s has been picked up from home by a %s with ID %s at %s
    #on-school: Hi Parent! Your Child With ID %s has been received at school with ID %s by a %s with ID %s at %s
    #off-school: Hi Parent! Your Child With ID %s has been signed out by a %s with ID %s of school with ID %s at %s