version: '3.8'

services:
  db:
    image: postgres:latest
    healthcheck:
      test: [ "CMD", "pg_isready", "-q", "-d", "postgres", "-U", "aaron" ]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    environment:
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=password
      - APP_DB_USER=aaron
      - APP_DB_PASS=aaron
      - APP_DB_NAME=safe_child_db
    volumes:
      - ./db/01-init.sh:/docker-entrypoint-initdb.d/01-init.sh
      - ./postgres-data:/var/lib/postgresql/data
    ports:
      - "5432:5432"

  rabbitmq-safeChild:
    image: rabbitmq:3.8-management-alpine
    #container_name: 'rabbitmq-safeChild'
    ports:
      - 5672:5672
        # HTTP management UI
      - 15672:15672
    environment:
      - RABBITMQ_DEFAULT_PASS=guest
      - RABBITMQ_DEFAULT_USER=guest
    volumes:
      - ./docker-conf/rabbitmq/data/:/var/lib/rabbitmq/
      - ./docker-conf/rabbitmq/log/:/var/log/rabbitmq
#    networks:
#      - rabbitmq_go_net

  safe-app:
    depends_on:
      - rabbitmq-safeChild
      - db
    container_name: safeChild-app
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB=safe_child_db
      - DB_USERNAME=aaron
      - DB_PASSWORD=aaron
      - QUEUE_HOST=rabbitmq-safeChild
      - QUEUE_USERNAME=guest
      - QUEUE_PASSWORD=guest
      - QUEUE_PORT=5672
    restart: always
    build:
      context: ./safe-child
      dockerfile: Dockerfile
    ports:
      - '8081:8081'
    extra_hosts:
      - host.docker.internal:host-gateway

  sms-app:
    depends_on:
      - rabbitmq-safeChild
      - db
    container_name: sms-app
    environment:
      DB_HOST: db
      DB_PORT: 5432
      DB: safe_child_db
      DB_USERNAME: aaron
      DB_PASSWORD: aaron
      QUEUE_HOST: rabbitmq-safeChild
      QUEUE_USERNAME: guest
      QUEUE_PASSWORD: guest
      QUEUE_PORT: 5672
    restart: always
    build:
      context: ./sms_notification
      dockerfile: Dockerfile
    ports:
      - '8083:8083'
    extra_hosts:
      - host.docker.internal:host-gateway
#networks:
#  rabbitmq_go_net:
#    driver: bridge